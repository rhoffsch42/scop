parsing fait:
	le pgm n accepte que des .obj ou .mtl ou -d dir_path
		si les fichiers ne sont pas valides, ils sont ignores
	gestion error
	charger autant de fichier qu'on veut et creer chaque objet et materiaux
		- un materiaux d'un fichier peut avoir le meme nom qu un autre dans un fichier different
			faire la meme chose pour les objets ? oui
			ou refuser tout cela, en interdisant un nom deja utilise, l'ignorer
		! attention si on charge des fichier ayant le meme nom (ou 2 fois le meme)
			ex: resources/42.mtl
				assets/42.mtl
			-> cas args: ignorer les suivants
	checker si les numeros des vertix dans les faces (f 1 2 3) indiquees existent
	fichier mtl
	link mtl dans les objets
	! attention si on charge des fichier ayant le meme nom (ou 2 fois le meme)
		! pour mtllib -> cas -d : dabord chercher dans les args puis dans le dir -d
parsing a faire:
	check les numeros des faces, les linker: creer des nouvelles variables.
	vertix et faces: transformer les liste chainees en tableau (garder les memes zones memoire : pas possible ?)

un objet peut il etre defini sans faces ?
on peut voir 2 fichiers .obj pour la teapot:
	l'un avec le nom (o teapot), lautre non. donc ce token ne serait pas obligatoire a priori.
	dans le cas ou il y a plusieurs objets dans un fichiers est ce que le token (o nom_de l'objet) est il obligatoire pour le premier ?

bonus a faire:
	- multiple objets (avec texture differente par ex)
		> parsing : plusieurs fichiers .obj : les obj dans un meme fichier forment un ensemble (rotation autour du centre de l'ensemble)
		> plusieur .obj : pouvoir selectionner l'objet (donc l'ensemble auquel il appartient) dans la scene, pour les rotations
		? est il necessaire de faire des objet (o object_name) differents pour utiliser des textures differentes?
	- gestion dautres keyword du format obj
	- charger les fichiers, puis via une interface: choisir lequel afficher avec la texture choisie
		Qt autorise ?
	- option -d : indiquer le dossier dans lequel chercher les assets (.mtl)
		! si on indique un .mtl + un dossier dans lequel il y a aussi ce .mtl mais cest pas le meme
			ex: ./scop [...] ./42.mtl -d ./assets/		$(ls ./assets/) = "42.mtl"
			- lequel prendre ? -> cherche d'abord dans les arguments, si rien: cherche dans le dossier -d
		! si on indique plusieurs fois -d xx
			ex: ./scop -d resources/ -d assets/
			-> prendre les deux
				! si ya le fichier .mtl dans les 2 ?
					-> prendre le premier dossier de la liste (ordre des args) ou bien ordre du stock
						- va chercher le materiaux dans tous les fichiers ayant le nom demande (mtllib)
